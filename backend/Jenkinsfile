pipeline {
  agent {
    docker {
      image 'node:18-bullseye'
      args  '''
        --user root
        -v /var/run/docker.sock:/var/run/docker.sock
      '''.trim()
    }
  }

  environment {
    AWS_REGION   = 'eu-central-1'
    ECR_REGISTRY = "610351333224.dkr.ecr.${AWS_REGION}.amazonaws.com"
  }

  stages {
    stage('Prepare Tooling') {
      steps {
        sh '''
          set -eux
          apt-get update
          apt-get install -y --no-install-recommends \
            awscli \
            docker.io \
            bash
          rm -rf /var/lib/apt/lists/*
        '''
      }
    }

    stage('Checkout')               { steps { checkout scm } }
    stage("Build"){
      steps {
        sh "npm i"
      }
    }

    stage('ECR Login & Push') {
      steps {
        withCredentials([usernamePassword(
          credentialsId: 'aws-creds',
          usernameVariable: 'AWS_ACCESS_KEY_ID',
          passwordVariable: 'AWS_SECRET_ACCESS_KEY'
        )]) {
          sh '''
            aws ecr get-login-password --region $AWS_REGION \
              | docker login --username AWS --password-stdin $ECR_REGISTRY
            docker build -t $ECR_REGISTRY/my-backend:${BUILD_NUMBER} .
            docker push $ECR_REGISTRY/my-backend:${BUILD_NUMBER}
          '''
        }
      }
    }
  }

  post { always { cleanWs() } }
}


